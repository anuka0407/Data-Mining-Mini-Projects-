combined_gestation = combgest,
under_37weeks = gestrec3,
breastfed = bfed
)
#create factors
birthweight_new$mother_race <- as.factor(birthweight_new$mother_race)
birthweight_new$mother_birthplace <- as.factor(birthweight_new$mother_birthplace)
birthweight_new$mother_education <- as.factor(birthweight_new$mother_education)
birthweight_new$hospital <- as.factor(birthweight_new$hospital)
birthweight_new$father_race <- as.factor(birthweight_new$father_race)
birthweight_new$mother_maritalstatus <- as.factor(birthweight_new$mother_maritalstatus)
birthweight_new$delivery_method <- as.factor(birthweight_new$delivery_method)
birthweight_new$attend <- as.factor(birthweight_new$attend)
birthweight_new$gest_diabetes <- as.factor(birthweight_new$gest_diabetes)
birthweight_new$hypertension_eclampsia <- as.factor(birthweight_new$hypertension_eclampsia)
birthweight_new$infertility_treatment <- as.factor(birthweight_new$infertility_treatment)
birthweight_new$previous_cesarian <- as.factor(birthweight_new$previous_cesarian)
birthweight_new$labor_induced <- as.factor(birthweight_new$labor_induced)
birthweight_new$anesthesia <- as.factor(birthweight_new$anesthesia)
birthweight_new$ruptured_uterus <- as.factor(birthweight_new$ruptured_uterus)
birthweight_new$perineal_laceration <- as.factor(birthweight_new$perineal_laceration)
birthweight_new$breastfed <- as.factor(birthweight_new$breastfed)
#remove time since last birth from the data, not really useful for our analysis
birthweight_new$time_sincelastbirth <-NULL
#take care of missing values since missing data in total is less that 10% we will not impute and just drop NA values
birthweight_new<-na.omit(birthweight_new)
## **use lubridate to have months and time in correct R format
#
#try this  birthweight_new<-birthweight_new %>%
#######****** #STILL CANT MAKE THIS WORK
#birthweight_new<-birthweight_new%>%
#mutate(time=lubridate::hm(birth_time, label=FALSE))
#Error in `$<-.data.frame`(`*tmp*`, time, value = new("Period", .Data = c(NA_real_,  :
#  replacement has 37707 rows, data has 37706
#> dim(birthweight_new)
#[1] 37706    42
birthweight_new$birth_month<-lubridate::month(birthweight_new$birth_month, label=FALSE)
levels(birthweight_new$mother_race) <- list("white"="10","black"="20","asian"="40","NHOPI"="50","more than 1 race"="60")
levels(birthweight_new$mother_birthplace) <- list("born in the U.S."="1","born outside the U.S."="2","unknown"="3")
levels(birthweight_new$mother_education) <- list("1-8 grade"="1","9-12 grade no HS"="2","HS diploma"="3","some college"="4","AA AS"="5","BA BS"="6","MA MS"="7","PhD EdD"="8")
levels(birthweight_new$hospital) <- list("Hospital"="1","Not Hospital"="2","Unknown"="3")
levels(birthweight_new$father_race) <- list("white"="1","black"="2","AIAN"="3","asian"="4","NHOPI"="5","more than 1 race"="6","unknown"="9")
levels(birthweight_new$mother_maritalstatus) <- list("married"="1","unmarried"="2","unmarried"="3","unknown"="9")
#(birthweight_new$time_sincelastbirth) <- list("less than 18 months"="00","less than 18 months"="01","less than 2 years"="02","less than 2 years"="03","less than 4 years"="04","less than 4 years"="05","less than 6 years"="06","less than 6 years"="07","unknown"="99")
levels(birthweight_new$delivery_method) <- list("Vaginal"="1","Vaginal"="2","Vaginal"="5","C-section"="3","C-section"="4","C-section"="6")
levels(birthweight_new$attend) <- list("Doctor"="1","Doctor"="2","midwife"="3","midwife"="4","other"="5")
week37to40 <- birthweight_new %>%
filter(!is.na(birth_weight)) %>%
filter(combined_gestation=="37" | combined_gestation=="38" | combined_gestation=="39"| combined_gestation=="40") %>%
filter(plurality=="1")
#is.na(week37to40)%>%table()
#  FALSE    TRUE
#1157674    2134
NAcol <- which(colSums(is.na(week37to40)) > 0)
sort(colSums(sapply(week37to40[NAcol], is.na)), decreasing = TRUE)
week37to40 <- na.omit(week37to40)
##Random Forest
set.seed(1234)
week37to40_split = initial_split(week37to40)
n = nrow(week37to40)
n_train = floor(0.8*n)
n_test = n - n_train
train_cases = sample.int(n, size=n_train, replace=FALSE)
week37to40_train = training(week37to40_split)
week37to40_test = testing(week37to40_split)
week37to40_uncorr <- week37to40 %>% select (birth_weight, mother_age, birth_month, father_education, priorlive, priorterm, prenatal_visits, f_cigs_1, m_ht_in, bmi, wtgain, no_infections, apgar5, combined_gestation,  sex, mother_birthplace, mother_race, mother_maritalstatus,hypertension_eclampsia, infertility_treatment, previous_cesarian, labor_induced, anesthesia, ruptured_uterus, perineal_laceration, attend)
set.seed(1234)
week37to40_split_uncorr = initial_split(week37to40_uncorr)
n_uncorr = nrow(week37to40_uncorr)
n_train_uncorr = floor(0.8*n_uncorr)
n_test_uncorr = n_uncorr - n_train_uncorr
train_cases_uncorr = sample.int(n_uncorr, size=n_train_uncorr, replace=FALSE)
week37to40_train_uncorr = training(week37to40_split_uncorr)
week37to40_test_uncorr = testing(week37to40_split_uncorr)
head(week37to40_train_uncorr)
dim(week37to40_train_uncorr)
names(week37to40_train_uncorr)
x.train<-data.matrix(week37to40_train_uncorr[,2:26])
y.train=week37to40_train_uncorr$birth_weight
x.test<-data.matrix(week37to40_test_uncorr[,2:26])
y.test<-week37to40_test_uncor$birth_weight
x.train<-data.matrix(week37to40_train_uncorr[,2:26])
y.train=week37to40_train_uncorr$birth_weight
x.test<-data.matrix(week37to40_test_uncorr[,2:26])
y.test<-week37to40_test_uncorr$birth_weight
set.seed(12345)
cv.fit<-cv.glmnet(x.train,y.train, alpha=1)
library(glmnet)
cv.fit<-cv.glmnet(x.train,y.train, alpha=1)
coef(cv.fit, s = "lambda.min")
opt.lambda<-cv.fit$lambda.min #select lambda that minimizes training mSE
print(paste("best labda value is", opt.lambda))
predict(cv.fit, newx = x.test, s = "lambda.min")
lasso.pred<-predict(cv.fit, newx = x.test, s = "lambda.min")
rmse.test<-sqrt(mean((lasso.pred-y_test)^2))
rmse.test<-sqrt(mean((lasso.pred-y.test)^2))
print(paste("Test RMSE is", rmse.test))
lassoVarImp2 <- varImp(lasso.mod,lambda=opt.lambda, scale=F)
lassoVarImp2 <- varImp(cv.fit,lambda=opt.lambda, scale=F)
fit2 <- glmnet(x.train, y.train, alpha = 0.2, lambda = opt.lambda)
lassoVarImp2 <- varImp(fit2,lambda=opt.lambda, scale=F)
lassoImportance2 <- lassoVarImp2$importance
varsSelected2 <- length(which(lassoImportance2$Overall!=0))
varsNotSelected2 <- length(which(lassoImportance2$Overall==0))
cat('Lasso uses', varsSelected2, 'variables in its model, and did not select', varsNotSelected2, 'variables.')
lasso.pred2<-predict(fi2t, newx = x.test, s = "lambda.min")
lasso.pred2<-predict(fi2, newx = x.test, s = "lambda.min")
lasso.pred2<-predict(fit2, newx = x.test, s = "lambda.min")
rmse.test2<-sqrt(mean((lasso.pred2-y.test)^2))
print(paste("Test RMSE is", rmse.test2))
print(paste("best labda value is", opt.lambda))
print(paste("Test RMSE is", rmse.test))
print(paste("Test RMSE is", rmse.test2))
coef.apprx <- coef(cv.fit, s = opt.lambda, exact = FALSE)
coef.exact <- coef(fit, s = opt.lambda, exact = TRUE, x=x.train, y=y.train)
coef.exact <- coef(cv.fit, s = opt.lambda, exact = TRUE, x=x.train, y=y.train)
cbind2(coef.exact[which(coef.exact != 0)],
coef.apprx[which(coef.apprx != 0)])
coef(cv.fit, s = "lambda.min")
knitr::opts_chunk$set(echo = FALSE,message=FALSE,warning=FALSE,cache=TRUE,include=FALSE)
library(tidyverse)
library(janitor)
library(xgboost)
library(skimr)
library(data.table)
library(ggcorrplot)
library(psych)
library(dplyr)
library(ggplot2)
library(scales)
library(FNN)
library(class)
library(rsample)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(randomForest)
library(gbm)
library(pdp)
library(Matrix)
library(glmnet)
#load data
birthweight_new <- read.csv("~/GitHub/datamining_hw/final project/birthweight_new.csv", stringsAsFactors=TRUE, header=TRUE)
### Create list of columns with missing values
na99<-c("combgest", "apgar5", "wtgain", "m_ht_in",
"previs", "illb_r11", "priorterm", "priorlive", "fagecomb")
#na999<-("pwgt_r")
na9999<-c("dbwt", "dob_tt")
#na99.9<- ("bmi")
### Replace missing values with NA
birthweight_new[ ,na99][birthweight_new[ ,na99] == 99] <- NA
birthweight_new[ ,na9999][birthweight_new[ ,na9999] == 9999] <- NA
birthweight_new$pwgt_r[birthweight_new$pwgt_r==999]<-NA
birthweight_new$bmi[birthweight_new$bmi==99.9]<-NA
birthweight_new$no_infec[birthweight_new$no_infec==9]<-NA
birthweight_new$dmeth_rec[birthweight_new$dmeth_rec==9]<-NA
birthweight_new$attend[birthweight_new$attend==9]<-NA
birthweight_new$illb_r11[birthweight_new$illb_r11==88]<-NA
# convert some variables as factors with levels
birthweight_new <- rename(birthweight_new,
birth_month = dob_mm,
birth_time = dob_tt,
birth_weight = dbwt,
mother_age = mager,
mother_birthplace = mbstate_rec,
hospital = bfacil3,
mother_race = mrace6,
mother_maritalstatus = dmar,
mother_education = meduc,
father_combinedage = fagecomb,
father_race = frace6,
father_education = feduc,
time_sincelastbirth = illb_r11,
prenatal_visits = previs,
prepreg_weight = pwgt_r,
gest_diabetes = rf_gdiab,
hypertension_eclampsia = rf_ehype,
infertility_treatment = rf_inftr,
previous_cesarian = rf_cesar,
no_infections = no_infec,
labor_induced = ld_indl,
anesthesia = ld_anes,
delivery_method = dmeth_rec,
ruptured_uterus = mm_rupt,
perineal_laceration = mm_plac,
plurality = dplural,
combined_gestation = combgest,
under_37weeks = gestrec3,
breastfed = bfed
)
#create factors
birthweight_new$mother_race <- as.factor(birthweight_new$mother_race)
birthweight_new$mother_birthplace <- as.factor(birthweight_new$mother_birthplace)
birthweight_new$mother_education <- as.factor(birthweight_new$mother_education)
birthweight_new$hospital <- as.factor(birthweight_new$hospital)
birthweight_new$father_race <- as.factor(birthweight_new$father_race)
birthweight_new$mother_maritalstatus <- as.factor(birthweight_new$mother_maritalstatus)
birthweight_new$delivery_method <- as.factor(birthweight_new$delivery_method)
birthweight_new$attend <- as.factor(birthweight_new$attend)
birthweight_new$gest_diabetes <- as.factor(birthweight_new$gest_diabetes)
birthweight_new$hypertension_eclampsia <- as.factor(birthweight_new$hypertension_eclampsia)
birthweight_new$infertility_treatment <- as.factor(birthweight_new$infertility_treatment)
birthweight_new$previous_cesarian <- as.factor(birthweight_new$previous_cesarian)
birthweight_new$labor_induced <- as.factor(birthweight_new$labor_induced)
birthweight_new$anesthesia <- as.factor(birthweight_new$anesthesia)
birthweight_new$ruptured_uterus <- as.factor(birthweight_new$ruptured_uterus)
birthweight_new$perineal_laceration <- as.factor(birthweight_new$perineal_laceration)
birthweight_new$breastfed <- as.factor(birthweight_new$breastfed)
#remove time since last birth from the data, not really useful for our analysis
birthweight_new$time_sincelastbirth <-NULL
#take care of missing values since missing data in total is less that 10% we will not impute and just drop NA values
birthweight_new<-na.omit(birthweight_new)
## **use lubridate to have months in correct R format
#> dim(birthweight_new)
#[1] 37706    42
birthweight_new$birth_month<-lubridate::month(birthweight_new$birth_month, label=FALSE)
levels(birthweight_new$mother_race) <- list("white"="10","black"="20","asian"="40","NHOPI"="50","more than 1 race"="60")
levels(birthweight_new$mother_birthplace) <- list("born in the U.S."="1","born outside the U.S."="2","unknown"="3")
levels(birthweight_new$mother_education) <- list("1-8 grade"="1","9-12 grade no HS"="2","HS diploma"="3","some college"="4","AA AS"="5","BA BS"="6","MA MS"="7","PhD EdD"="8")
levels(birthweight_new$hospital) <- list("Hospital"="1","Not Hospital"="2","Unknown"="3")
levels(birthweight_new$father_race) <- list("white"="1","black"="2","AIAN"="3","asian"="4","NHOPI"="5","more than 1 race"="6","unknown"="9")
levels(birthweight_new$mother_maritalstatus) <- list("married"="1","unmarried"="2","unmarried"="3","unknown"="9")
levels(birthweight_new$delivery_method) <- list("Vaginal"="1","Vaginal"="2","Vaginal"="5","C-section"="3","C-section"="4","C-section"="6")
levels(birthweight_new$attend) <- list("Doctor"="1","Doctor"="2","midwife"="3","midwife"="4","other"="5")
week37to40 <- birthweight_new %>%
filter(!is.na(birth_weight)) %>%
filter(combined_gestation=="37" | combined_gestation=="38" | combined_gestation=="39"| combined_gestation=="40") %>%
filter(plurality=="1")
is.na(week37to40)%>%table()
#  FALSE    TRUE
#1157674    2134
NAcol <- which(colSums(is.na(week37to40)) > 0)
sort(colSums(sapply(week37to40[NAcol], is.na)), decreasing = TRUE)
week37to40 <- na.omit(week37to40)
#correlation for variables
num_cols <- unlist(lapply(week37to40, is.numeric))         # Identify numeric columns
data_num <- week37to40[, num_cols]
data_num <-na.omit(data_num)
data_num$X <- NULL
data_num$birth_month <- NULL
data_num$birth_time <- NULL
data_num$father_education <- NULL
corr<-cor(data_num,use="pairwise.complete.obs")%>%round(2)
ggcorrplot(corr, hc.order = FALSE,
type="upper",
outline.color="white",
title="Correlogram of birthweight variables")
#histogram of baby weight for gestational weeks 37-40
g <- ggplot(week37to40, aes(birth_weight)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=sex),
binwidth = 200,
col="black",
) + labs(title="Histogram of Birthweight for gestational weeks 37 to 40",
subtitle="Birthweight and Sex of the infant")  + scale_x_continuous(name="Birthweight, in grams",breaks=seq(0,6000,500)) + scale_y_continuous(name="Number of births",breaks=seq(0,9000,1000))
avg<-mean(week37to40$birth_weight)
sd<-sd(week37to40$birth_weight)
gender_avg_weight<-week37to40 %>%
group_by(sex) %>%
summarise(avg_weight = mean(birth_weight),
sd_weight = sd(birth_weight))
library(hrbrthemes)
s1=ggplot(week37to40, aes(x=as.factor(combined_gestation))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Weeks of Gestation')
s2=ggplot(week37to40, aes(x=wtgain)) +
geom_density() +
theme_classic()+ labs(x='Weight Gain During Pregnancy') + scale_x_continuous(breaks=seq(0,100,10))
s3=ggplot(week37to40, aes(x=as.factor(m_ht_in))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Mother Height (Inches)') + scale_x_discrete(labels=c(" ","56"," ","58"," ","60"," ","62"," ","64"," ","66"," ","68"," ","70"," ","72"," ","74"," "),limits=c("55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"))
s4=ggplot(week37to40, aes(x=mother_age)) +
geom_density() +
theme_classic()+ labs(x='Mother Age') + scale_x_continuous(breaks=seq(15,50,5))
s5=ggplot(week37to40, aes(x=prepreg_weight)) +
geom_density() +
theme_classic()+ labs(x='Pre-Pregnancy Weight') + scale_x_continuous(breaks=seq(80,360,40))
s6=ggplot(week37to40, aes(x=as.factor(prenatal_visits))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Prenatal Care Visits') + scale_x_discrete(labels=c("0"," "," "," "," ","5"," "," "," "," ","10"," "," "," "," ","15"," "," "," "," ","20"," "," "," "," ","25"," "," "," "," ","30"),limits=c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30"))
s7=ggplot(data=week37to40, aes(x=as.factor(mother_race))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Mother Race')
s8=ggplot(data=week37to40, aes(x=as.factor(mother_maritalstatus))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Mother Marital Status')
s9=ggplot(data=week37to40, aes(x=as.factor(mother_education))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Mother Education Level') + scale_x_discrete(labels=c("1-8","some","HS","some","Assoc","Bach","Mast","PhD"),limits=c("1-8 grade","9-12 grade no HS","HS diploma","some college","AA AS","BA BS","MA MS","PhD EdD"))
s10=ggplot(data=week37to40, aes(x=as.factor(mother_birthplace))) +
geom_histogram(stat='count', fill="dodgerblue", color="black") + labs(x='Mother Birthplace') + scale_x_discrete(labels=c("U.S.","other"),limits=c("born in the U.S.","born outside the U.S."))
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,cols=2)
##Random Forest
set.seed(1234)
week37to40_split = initial_split(week37to40)
n = nrow(week37to40)
n_train = floor(0.8*n)
n_test = n - n_train
train_cases = sample.int(n, size=n_train, replace=FALSE)
week37to40_train = training(week37to40_split)
week37to40_test = testing(week37to40_split)
week37to40_train$labor_induced <- NULL
week37to40_train$perineal_laceration <- NULL
week37to40_train$X <- NULL
week37to40_train$birth_time <- NULL
week37to40_train$hospital <- NULL
week37to40_train$hypertension_eclampsia <- NULL
week37to40_train$labor_induced <- NULL
week37to40_train$anesthesia <- NULL
week37to40_train$delivery_method <- NULL
week37to40_train$ruptured_uterus <- NULL
week37to40_train$perineal_laceration <- NULL
week37to40_train$attend <- NULL
week37to40_train$under_37weeks <- NULL
week37to40_train$breastfed <- NULL
week37to40_test$labor_induced <- NULL
week37to40_test$perineal_laceration <- NULL
week37to40_test$X <- NULL
week37to40_test$birth_time <- NULL
week37to40_test$hospital <- NULL
week37to40_test$hypertension_eclampsia <- NULL
week37to40_test$labor_induced <- NULL
week37to40_test$anesthesia <- NULL
week37to40_test$delivery_method <- NULL
week37to40_test$ruptured_uterus <- NULL
week37to40_test$perineal_laceration <- NULL
week37to40_test$attend <- NULL
week37to40_test$under_37weeks <- NULL
week37to40_test$breastfed <- NULL
forest1 = randomForest(birth_weight ~ . - apgar5, data=week37to40_train, n.trees=100, importance=TRUE)
imp_forest1<-importance(forest1)
imp_DF <- data.frame(Variables = row.names(imp_forest1), MSE = imp_forest1[,1])
imp_DF <- imp_DF[order(imp_DF$MSE, decreasing = TRUE),]
ggplot(imp_DF[1:20,], aes(x=reorder(Variables, MSE), y=MSE, fill=MSE)) + geom_bar(stat = 'identity') + labs(x = 'Variables', y= '% increase MSE if variable is randomly permuted') + coord_flip() + theme(legend.position="none") + ggtitle("Variable Importance from Random Forest")
yhat_test = predict(forest1, week37to40_test)
RMSE_RF<-rmse(forest1,week37to40_test)
print(RMSE_RF)
week37to40_new<-week37to40%>%
mutate(underweight=as.factor(ifelse(birth_weight<2500, "underweight", "not underweight")),
agediscrete=as.factor(round(mother_age/10,0)),
risk=as.factor(ifelse(mother_age>35, "high risk", "low risk")))
#remove X because there is nothing to learn from X that stands as ID
week37to40_new$X<-NULL
week37to40_new$birth_weight <- NULL
week37to40_new$labor_induced <- NULL
week37to40_new$perineal_laceration <- NULL
week37to40_new$birth_time <- NULL
week37to40_new$hospital <- NULL
week37to40_new$hypertension_eclampsia <- NULL
week37to40_new$labor_induced <- NULL
week37to40_new$anesthesia <- NULL
week37to40_new$delivery_method <- NULL
week37to40_new$ruptured_uterus <- NULL
week37to40_new$perineal_laceration <- NULL
week37to40_new$attend <- NULL
week37to40_new$under_37weeks <- NULL
week37to40_new$breastfed <- NULL
week37to40_new$agediscrete <- NULL
week37to40_new$apgar5 <- NULL
#train test split with caret
set.seed(123)
week37to40_new_split = initial_split(week37to40_new)
nrow = nrow(week37to40_new)
n_train_new = floor(0.8*nrow)
n_test_new = nrow - n_train_new
train_cases = sample.int(nrow, size=n_train_new, replace=FALSE)
week37to40_new_train = training(week37to40_new_split)
week37to40_new_test = testing(week37to40_new_split)
#unlinke GLM that assumes that feautures are uncorrelated in order to predict more accurate outcomes. decision tree algorithms including boosted trees are robust to these feautures. thus we do nothave to worry about correlated feautures!
# **ONE HOT ENCODING***
#transform categorical data to dummy variables (the purpose is to transform each value of the each categorical feauture into a binary feauture {0,1}.
sparse_matrix<-sparse.model.matrix(underweight~.-1, data = week37to40_new_train)
sparse_matrix_test<-sparse.model.matrix(underweight~.-1, data=week37to40_new_test)
#create output numeric vector (not as a sparse matrix)
output_vector=as.numeric(week37to40_new_train$underweight=="underweight")
output_vector_test=as.numeric(week37to40_new_test$underweight=="underweight")
##build the model
bst_boost<-xgboost(data=sparse_matrix, label=output_vector, max.depth=4, eta=0.2, nthread=2, nround=10, objective="binary:logistic")
pred_boost<-predict(bst_boost, sparse_matrix_test)
err_boost<-as.numeric(sum(as.integer(pred_boost>0.5)!=output_vector_test))/length(output_vector_test)
print(paste("Test error = ", err_boost))
importance_boost<-xgb.importance(model=bst_boost)
print(xgb.plot.importance(importance_matrix = importance_boost, top_n=10))
week37to40_new<-week37to40%>%
mutate(overweight=as.factor(ifelse(birth_weight>4000, "overweight", "not overweight")),
agediscrete=as.factor(round(mother_age/10,0)),
risk=as.factor(ifelse(mother_age>35, "high risk", "low risk")))
#remove X because there is nothing to learn from X that stands as ID
week37to40_new$X<-NULL
week37to40_new$birth_weight <- NULL
week37to40_new$labor_induced <- NULL
week37to40_new$perineal_laceration <- NULL
week37to40_new$birth_time <- NULL
week37to40_new$hospital <- NULL
week37to40_new$hypertension_eclampsia <- NULL
week37to40_new$labor_induced <- NULL
week37to40_new$anesthesia <- NULL
week37to40_new$delivery_method <- NULL
week37to40_new$ruptured_uterus <- NULL
week37to40_new$perineal_laceration <- NULL
week37to40_new$attend <- NULL
week37to40_new$under_37weeks <- NULL
week37to40_new$breastfed <- NULL
week37to40_new$agediscrete <- NULL
week37to40_new$apgar5 <- NULL
#train test split with caret
set.seed(123)
week37to40_new_split = initial_split(week37to40_new)
nrow = nrow(week37to40_new)
n_train_new = floor(0.8*nrow)
n_test_new = nrow - n_train_new
train_cases = sample.int(nrow, size=n_train_new, replace=FALSE)
week37to40_new_train = training(week37to40_new_split)
week37to40_new_test = testing(week37to40_new_split)
sparse_matrix<-sparse.model.matrix(overweight~.-1, data = week37to40_new_train)
sparse_matrix_test<-sparse.model.matrix(overweight~.-1, data=week37to40_new_test)
#create output numeric vector (not as a sparse matrix)
output_vector=as.numeric(week37to40_new_train$overweight=="overweight")
output_vector_test=as.numeric(week37to40_new_test$overweight=="overweight")
##build the model
bst_boost<-xgboost(data=sparse_matrix, label=output_vector, max.depth=4, eta=0.2, nthread=2, nround=10, objective="binary:logistic")
pred_boost<-predict(bst_boost, sparse_matrix_test)
err_boost<-as.numeric(sum(as.integer(pred_boost>0.5)!=output_vector_test))/length(output_vector_test)
print(paste("Test Error = ", err_boost))
importance_boost<-xgb.importance(model=bst_boost)
print(xgb.plot.importance(importance_matrix = importance_boost, top_n=10))
## for LM and glmnet models, we should drop variables that are highly correlated with one another as we saw from above crr matrix and create a new data frame with uncorrealted variables as well as important variables that were predicted by the random forest model
week37to40_uncorr <- week37to40 %>% select (birth_weight, mother_age, birth_month, father_education, priorlive, priorterm, prenatal_visits, f_cigs_1, m_ht_in, bmi, wtgain, no_infections, apgar5, combined_gestation,  sex, mother_birthplace, mother_race, mother_maritalstatus,hypertension_eclampsia, infertility_treatment, previous_cesarian, labor_induced, anesthesia, ruptured_uterus, perineal_laceration, attend)
#train test split on new dataframe
set.seed(1234)
week37to40_split_uncorr = initial_split(week37to40_uncorr)
n_uncorr = nrow(week37to40_uncorr)
n_train_uncorr = floor(0.8*n_uncorr)
n_test_uncorr = n_uncorr - n_train_uncorr
train_cases_uncorr = sample.int(n_uncorr, size=n_train_uncorr, replace=FALSE)
week37to40_train_uncorr = training(week37to40_split_uncorr)
week37to40_test_uncorr = testing(week37to40_split_uncorr)
#lm model with stepwise selection
lm1 = lm(birth_weight ~ ., data=week37to40_train_uncorr)
lm_step = step(lm1, scope=~(.)^2)
rmse_lm<-rmse(lm_step,week37to40_test_uncorr)
predict(lm_step, week37to40_test_uncorr)
#405.8615
set.seed(12345)
#Lasso model
x.train<-data.matrix(week37to40_train_uncorr[,2:26])
y.train=week37to40_train_uncorr$birth_weight
x.test<-data.matrix(week37to40_test_uncorr[,2:26])
y.test<-week37to40_test_uncorr$birth_weight
cv.fit<-cv.glmnet(x.train,y.train, alpha=1)
coef(cv.fit, s = "lambda.min")
opt.lambda<-cv.fit$lambda.min #select lambda that minimizes training mSE
print(paste("best labda value is", opt.lambda))
lasso.pred<-predict(cv.fit, newx = x.test, s = "lambda.min")
rmse.test<-sqrt(mean((lasso.pred-y.test)^2))
print(paste("Test RMSE is", rmse.test))
coef.apprx <- coef(cv.fit, s = opt.lambda, exact = FALSE)
coef.exact <- coef(cv.fit, s = opt.lambda, exact = TRUE, x=x.train, y=y.train)
cbind2(coef.exact[which(coef.exact != 0)],
coef.apprx[which(coef.apprx != 0)])
coef.apprx <- coef(cv.fit, s = opt.lambda, exact = FALSE)
coef.apprx[which(coef.apprx == 0)]
coef.apprx[which(coef.apprx == 0)]
cbind2(coef.exact[which(coef.exact != 0)],
coef.apprx[which(coef.apprx != 0)])
coef.exact[which(coef.exact != 0)]%>%kable()
library(kableExtra)
coef.exact[which(coef.exact != 0)]%>%kable()
coef.exact[which(coef.exact != 0)]
rmse.test<-sqrt(mean((lasso.pred-y.test)^2))
rmse.test
library(hrbrthemes)
s1=ggplot(week37to40, aes(x=as.factor(combined_gestation))) +
geom_histogram(stat='count',fill="cornflowerblue") + labs(x='Weeks of Gestation')
s2=ggplot(week37to40, aes(x=wtgain)) +
geom_density() +
theme_classic()+ labs(x='Weight Gain During Pregnancy') + scale_x_continuous(breaks=seq(0,100,10))
s3=ggplot(week37to40, aes(x=as.factor(m_ht_in))) +
geom_histogram(stat='count',fill="cornflowerblue") + labs(x='Mother Height (Inches)') + scale_x_discrete(labels=c(" ","56"," ","58"," ","60"," ","62"," ","64"," ","66"," ","68"," ","70"," ","72"," ","74"," "),limits=c("55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"))
s4=ggplot(week37to40, aes(x=mother_age)) +
geom_density() +
theme_classic()+ labs(x='Mother Age') + scale_x_continuous(breaks=seq(15,50,5))
s5=ggplot(week37to40, aes(x=prepreg_weight)) +
geom_density() +
theme_classic()+ labs(x='Pre-Pregnancy Weight') + scale_x_continuous(breaks=seq(80,360,40))
s6=ggplot(week37to40, aes(x=as.factor(prenatal_visits))) +
geom_histogram(stat='count',fill="cornflowerblue") + labs(x='Prenatal Care Visits') + scale_x_discrete(labels=c("0"," "," "," "," ","5"," "," "," "," ","10"," "," "," "," ","15"," "," "," "," ","20"," "," "," "," ","25"," "," "," "," ","30"),limits=c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30"))
s7=ggplot(data=week37to40, aes(x=as.factor(mother_race))) +
geom_histogram(stat='count') + labs(x='Mother Race')
s8=ggplot(data=week37to40, aes(x=as.factor(mother_maritalstatus))) +
geom_histogram(stat='count') + labs(x='Mother Marital Status')
s9=ggplot(data=week37to40, aes(x=as.factor(mother_education))) +
geom_histogram(stat='count') + labs(x='Mother Education Level') + scale_x_discrete(labels=c("1-8","some","HS","some","Assoc","Bach","Mast","PhD"),limits=c("1-8 grade","9-12 grade no HS","HS diploma","some college","AA AS","BA BS","MA MS","PhD EdD"))
s10=ggplot(data=week37to40, aes(x=as.factor(mother_birthplace))) +
geom_histogram(stat='count') + labs(x='Mother Birthplace') + scale_x_discrete(labels=c("U.S.","other"),limits=c("born in the U.S.","born outside the U.S."))
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,cols=2)
g1=ggplot(data=week37to40, aes(x=as.factor(combined_gestation), y=birth_weight, color=combined_gestation))+geom_boxplot()+ggtitle("Weeks of gestation")+xlab("Weeks of gestation")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))
mean_weight<-mean(week37to40$prepreg_weight)
g2=ggplot(data=week37to40, aes(x=prepreg_weight, y=birth_weight, color=prepreg_weight > 160))+
geom_point(method = "loess", se=TRUE)+
geom_smooth()+ggtitle("Pre-pregnancy weight")+xlab("Pre-pregnancy weight (lb)")+ylab("Birth weight (grams)")
mean_height<-mean(week37to40$m_ht_in)
g3=ggplot(data=week37to40, aes(x=m_ht_in, y=birth_weight, color=m_ht_in > 64))+
geom_smooth(se=TRUE)+ggtitle("Mother's height")+xlab("Mother's height (in)")+ylab("Birth weight(grams)")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(g1,g2,g3,cols=2)g1=ggplot(data=week37to40, aes(x=as.factor(combined_gestation), y=birth_weight))+geom_boxplot(color="black",fill="grey")+ggtitle("Weeks of gestation")+xlab("Weeks of gestation")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))
g1=ggplot(data=week37to40, aes(x=as.factor(combined_gestation), y=birth_weight))+geom_boxplot(color="black",fill="grey")+ggtitle("Weeks of gestation")+xlab("Weeks of gestation")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))
g2=ggplot(data=week37to40, aes(x=as.factor(wtgain), y=birth_weight))+stat_summary(geom='bar',fun='mean',fill="cornflowerblue")+ggtitle("Pregnancy weight gain")+xlab("Weight gain (lb)")+ylab("Birth weight (grams)") +scale_x_discrete(labels=c("0"," "," "," "," ","5"," "," "," "," ","10"," "," "," "," ","15"," "," "," "," ","20"," "," "," "," ","25"," "," "," "," ","30"," "," "," "," ","35"," "," "," "," ","40"," "," "," "," ","45"," "," "," "," ","50"," "," "," "," ","55"," "," "," "," ","60"," "," "," "," ","65"," "," "," "," ","70"," "," "," "," ","75"," "," "," "," ","80"," "," "," "," ","85"," "," "," "," ","90"," "," "," "," ","95"," "," "," "," ","100"), limits=c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"))+scale_y_continuous(breaks=seq(1000,6000,500))
g3=ggplot(data=week37to40, aes(x=as.factor(prepreg_weight), y=birth_weight))+stat_summary(geom='bar',fun='mean',fill="cornflowerblue")+ggtitle("Pre-pregnancy weight")+xlab("Pre-pregnancy weight (lb)")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))+scale_x_discrete(labels=c(" ","100"," ","150"," ","200"," ","250"," ","300"," ","350"," "),limits=c("75","100","125","150","175","200","225","250","275","300","325","350","375"))
g4=ggplot(data=week37to40, aes(x=as.factor(m_ht_in), y=birth_weight))+stat_summary(geom='bar',fun='mean',fill="cornflowerblue")+ggtitle("Mother's height")+xlab("Mother's height (in)")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))+scale_x_discrete(labels=c(" ","56"," ","58"," ","60"," ","62"," ","64"," ","66"," ","68"," ","70"," ","72"," ","74"," "),limits=c("55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"))
g5=ggplot(data=week37to40, aes(x=combined_gestation, y=birth_weight))+stat_summary(geom='bar',fun='mean',fill="cornflowerblue")+ggtitle("Weeks of gestation")+xlab("Weeks of gestation")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))+scale_x_continuous(breaks=seq(37,40,1))+geom_vline(xintercept=mean(week37to40$combined_gestation),size=1,color="black")
g6=ggplot(data=week37to40, aes(x=wtgain, y=birth_weight))+geom_point(color="cornflowerblue")+geom_smooth(method = "loess", se=TRUE, color="navy")+ggtitle("Pregnancy weight gain")+xlab("Weight gain (lb)")+ylab("Birth weight (grams)")+scale_x_continuous(breaks=seq(0,100,10))+scale_y_continuous(breaks=seq(1000,6000,500))+geom_vline(xintercept=mean(week37to40$wtgain),size=0.5,color="black")
g7=ggplot(data=week37to40, aes(x=prepreg_weight, y=birth_weight))+geom_point(color="cornflowerblue")+geom_smooth(method = "loess", se=TRUE, color="navy")+ggtitle("Pre-pregnancy weight")+xlab("Pre-pregnancy weight (lb)")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))+scale_x_continuous(breaks=seq(80,360,40))+geom_vline(xintercept=mean(week37to40$prepreg_weight),size=0.5,color="black")
g8=ggplot(data=week37to40, aes(x=m_ht_in, y=birth_weight))+geom_point(color="cornflowerblue")+geom_smooth(method = "loess", se=TRUE, color="navy")+ggtitle("Mother's height")+xlab("Mother's height (in)")+ylab("Birth weight (grams)")+scale_y_continuous(breaks=seq(1000,6000,500))+scale_x_continuous(breaks=seq(54,76,2))+geom_vline(xintercept=mean(week37to40$m_ht_in),size=0.5,color="black")
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(g1,g2,g3,g4,cols=2)
